--- a/zap_config.py
+++ b/zap_config.py
@@ -1,11 +1,13 @@
 #!/usr/bin/python
 
 import logging
+from cryptography.fernet import Fernet
 
 class ZapConfig:
     def load_config(self, extra_zap_params):
         logging.info("Extra params passed by ZAP: %s", extra_zap_params)
 
+        self.auth_key = 'RvivOR8btMLOCM0T8G4w8c3PuLniLmmXz1dsVOoXC8M='
         self.extra_zap_params = extra_zap_params
         self.auth_auto = self._get_zap_param_boolean('auth.auto') or True
         self.auth_display = self._get_zap_param_boolean('auth.display') or False
@@ -23,11 +25,17 @@
         self.xss_collector = self._get_zap_param('xss.collector') or ''
         
     def _get_zap_param(self, key):
-        for param in self.extra_zap_params:
+        for i, param in enumerate(self.extra_zap_params):
             if param.find(key) > -1:
                 value = param[len(key) + 1:]
-                logging.info('_get_zap_param %s: %s', key, value)
-                return value
+                if key == 'auth.password':
+                    decrypt_pass = (Fernet(self.auth_key.encode()).decrypt(value.encode())).decode()
+                    self.extra_zap_params[i] = key+'='+decrypt_pass
+                    logging.info('_get_zap_param %s: %s', key, ''.rjust(len(decrypt_pass),'*'))
+                    return decrypt_pass
+                else:
+                    logging.info('_get_zap_param %s: %s', key, value)
+                    return value
 
     def _get_zap_param_list(self, key):
         for param in self.extra_zap_params:
